{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "gameId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					}
				],
				"name": "GameCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "gameId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "enum TicTacToe.Winners",
						"name": "winner",
						"type": "uint8"
					}
				],
				"name": "GameOver",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "gameId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "playerNumber",
						"type": "uint8"
					}
				],
				"name": "PlayerJoinedGame",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "gameId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "xCoordinate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "yCoordinate",
						"type": "uint256"
					}
				],
				"name": "PlayerMadeMove",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_system",
				"outputs": [
					{
						"internalType": "contract RatingSystem",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "games",
				"outputs": [
					{
						"internalType": "address",
						"name": "playerA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "playerB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "nonce",
						"type": "uint256"
					},
					{
						"internalType": "enum TicTacToe.Winners",
						"name": "winner",
						"type": "uint8"
					},
					{
						"internalType": "enum TicTacToe.Players",
						"name": "playerTurn",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "gameId",
						"type": "bytes32"
					}
				],
				"name": "getGameBoard",
				"outputs": [
					{
						"internalType": "enum TicTacToe.Players[3][3]",
						"name": "board",
						"type": "uint8[3][3]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_gameId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_xCoordinate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_yCoordinate",
						"type": "uint256"
					}
				],
				"name": "makeMove",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "playerA",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "playerB",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							}
						],
						"internalType": "struct GameLibrary.Match",
						"name": "m",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct GameLibrary.Sig",
						"name": "pAsig",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct GameLibrary.Sig",
						"name": "pBsig",
						"type": "tuple"
					}
				],
				"name": "newGame",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "gameId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract RatingSystem",
						"name": "system",
						"type": "address"
					}
				],
				"name": "updateRatingSystem",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TicTacToe.sol": "TicTacToe"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163",
				"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"contracts/RatingSystem.sol": {
			"keccak256": "0x857acc2af7cc28af03cfacbf53ac3e5297765129d1d3f0bfd4414d0ec95ecac4",
			"license": "MIT",
			"urls": [
				"bzz-raw://c6b001f71c4e27658fda360372f2c20857e8a2edf533894bd3ed9b8a9dee4477",
				"dweb:/ipfs/QmRMZJHWB4qskfp5kMv9XJzBykLZERZwfm4mbQmxdJVDVg"
			]
		},
		"contracts/TicTacToe.sol": {
			"keccak256": "0xd0fd0eb121b89034069d8fcd899409c28cf019823b17c08ea627ebb522513c6a",
			"license": "MIT",
			"urls": [
				"bzz-raw://52b28533ad68bc6ee2e3c720c6146284e33509da19ff05117c41dc1e45afc2a8",
				"dweb:/ipfs/QmP2bXWqgJ2h98nBNAYvDvGBxzx1GY8aFKCggNBE4XwWcb"
			]
		},
		"interfaces/IPeriodic.sol": {
			"keccak256": "0x9dca8e50ff591f7f5096dc845bf8c419cd70173d412f35b3d77c232fb09d074a",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a5378793b1e6ac00e54c83a177e35c1619926fe259e6d080e9f7a303ff78847",
				"dweb:/ipfs/QmX7KpigcT3pBA5sJ4o5PM3VsLt5jh9GYfv2cTfShYADHe"
			]
		},
		"interfaces/IRating.sol": {
			"keccak256": "0x38f9ff0510711cb00267cec4fe062d38258c0c611a6b10c8eeb1187cb2a0a149",
			"license": "MIT",
			"urls": [
				"bzz-raw://d1043521861a39b5368d659c87e9781b3f2e56bcadb8ef4f8cbc8066ace4a823",
				"dweb:/ipfs/QmeXE5F9BkvcH1N8Si6Hk6vFrtrqcBjgwgmK6TaDHzK3xp"
			]
		},
		"library/GameLibrary.sol": {
			"keccak256": "0xb7ac35ed321e7c57dba35cc0a315b8da398b03654590e6859a2c0e12fe0ebf03",
			"license": "MIT",
			"urls": [
				"bzz-raw://fe6aafb3995c48e4b06775ef0cdbae575de5e8bca216ef6ed6a906ae77920c44",
				"dweb:/ipfs/QmRrRRtjNaehFsxVJMuDqB7PvmXR5XdgQXV64e7yz73JKC"
			]
		}
	},
	"version": 1
}